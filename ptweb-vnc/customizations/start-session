#!/bin/bash
set -euo pipefail


# Allow runtime configuration of VNC geometry and color depth for performance/tuning
# VNC_GEOMETRY example: 1280x720, 1024x768, 1920x1080
# VNC_DEPTH example: 8, 16, 24
VNC_PASS=${VNC_PASS:-Cisco123}
VNC_GEOMETRY=${VNC_GEOMETRY:-1280x720}
VNC_DEPTH=${VNC_DEPTH:-16}

rm -f /home/ptuser/.vnc/*.pid
rm -f /home/ptuser/.vnc/*.log
rm -Rf /tmp/.X*
echo "Starting the VNC server ..."

# Ensure .vnc directory exists and password is set for ptuser
mkdir -p /home/ptuser/.vnc
chown -R ptuser:ptuser /home/ptuser/.vnc
if [ ! -f /home/ptuser/.vnc/passwd ]; then
    # Create VNC password non-interactively using vncpasswd -f
    # vncpasswd -f reads password from stdin and prints hashed password to stdout
    printf '%s
' "$VNC_PASS" | vncpasswd -f > /home/ptuser/.vnc/passwd || true
    chown ptuser:ptuser /home/ptuser/.vnc/passwd || true
    chmod 600 /home/ptuser/.vnc/passwd || true
fi

# Create and set up X authority for ptuser
touch /home/ptuser/.Xauthority
chown ptuser:ptuser /home/ptuser/.Xauthority
chmod 600 /home/ptuser/.Xauthority

# Start VNC server with configurable geometry and color depth.
# Use lower depth (8 or 16) to save memory and bandwidth.
/usr/bin/vncserver -geometry "${VNC_GEOMETRY}" -depth "${VNC_DEPTH}" || {
    echo "vncserver failed to start" >&2
    exit 1
}

sleep 5

# Start VNC server with configurable geometry and color depth.
# Use lower depth (8 or 16) to save memory and bandwidth.
/usr/bin/vncserver -geometry "${VNC_GEOMETRY}" -depth "${VNC_DEPTH}" || {
    echo "vncserver failed to start" >&2
    exit 1
}

sleep 5

echo "VNC server is running on display :1 (port 5901)"
echo "Packet Tracer will be launched when user clicks the taskbar icon or via autostart"

# Keep container alive
while true; do sleep 3600; done


