#!/bin/bash
set -euo pipefail


# Allow runtime configuration of VNC geometry and color depth for performance/tuning
# VNC_GEOMETRY example: 1280x720, 1024x768, 1920x1080
# VNC_DEPTH example: 8, 16, 24
VNC_PASS=${VNC_PASS:-Cisco123}
VNC_GEOMETRY=${VNC_GEOMETRY:-1280x720}
VNC_DEPTH=${VNC_DEPTH:-16}

rm -f /home/ptuser/.vnc/*.pid
rm -f /home/ptuser/.vnc/*.log
rm -Rf /tmp/.X*
echo "Starting the VNC server ..."

# Ensure .vnc directory exists and password is set for ptuser
mkdir -p /home/ptuser/.vnc
chown -R ptuser:ptuser /home/ptuser/.vnc
if [ ! -f /home/ptuser/.vnc/passwd ]; then
    # Create VNC password non-interactively using vncpasswd -f
    # vncpasswd -f reads password from stdin and prints hashed password to stdout
    printf '%s
' "$VNC_PASS" | vncpasswd -f > /home/ptuser/.vnc/passwd || true
    chown ptuser:ptuser /home/ptuser/.vnc/passwd || true
    chmod 600 /home/ptuser/.vnc/passwd || true
fi

# Start VNC server with configurable geometry and color depth.
# Use lower depth (8 or 16) to save memory and bandwidth.
/usr/bin/vncserver -geometry "${VNC_GEOMETRY}" -depth "${VNC_DEPTH}" || {
    echo "vncserver failed to start" >&2
    exit 1
}

sleep 5

# Try to find Packet Tracer process by common names
pt_pid="$(pidof PacketTracer7 || true)"
if [ -z "$pt_pid" ]; then
    pt_pid="$(pidof PacketTracer || true)"
fi
if [ -z "$pt_pid" ]; then
    pt_pid="$(pidof packettracer || true)"
fi

# If Packet Tracer not running, try to start it directly (display :1 expected from vncserver)
if [ -z "$pt_pid" ]; then
    echo "Packet Tracer not running, attempting to start it manually..."
    # If this script is running as root, switch to ptuser to start PT; if already running as ptuser, start directly.
    if [ "$(id -u)" -eq 0 ]; then
        # Prefer runuser (doesn't require PAM) in containers. Fall back to su forcing /bin/sh if not available.
        # Prefer runuser when available, but force /bin/sh to avoid executing /bin/bash.
        if command -v runuser >/dev/null 2>&1; then
            # If runuser exists, use it but specify a POSIX shell to avoid bash exec issues
            runuser -l ptuser -c "/bin/sh -c 'DISPLAY=:1 /opt/pt/packettracer >/dev/null 2>&1 &'" || true
        else
            su -s /bin/sh -l ptuser -c "DISPLAY=:1 /opt/pt/packettracer >/dev/null 2>&1 &" || true
        fi
    else
        # already ptuser; start without su (background and ignore failures)
        DISPLAY=:1 /opt/pt/packettracer >/dev/null 2>&1 &
    fi
    sleep 5
    pt_pid="$(pidof PacketTracer || pidof packettracer || true)"
fi

if [ -z "$pt_pid" ]; then
    echo "Failed to start Packet Tracer"
    exit 1
fi

echo "Packet Tracer running with PID(s): $pt_pid"

while true; do sleep 3600; done


